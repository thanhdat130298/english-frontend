@use 'variables' as *;
@use 'sass:map';

// Global Styles
* {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}

body {
  font-family: map.get($font-family, sans);
  font-size: map.get($font-size, base);
  line-height: map.get($line-height, normal);
  color: var(--color-text);
  background-color: var(--color-background);
}

// Utility Classes
.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-grow {
  flex-grow: 1;
}

.items-center {
  align-items: center;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-end {
  justify-content: flex-end;
}

.space-x-1 > * + * {
  margin-left: map.get($spacing, 1);
}

.space-x-2 > * + * {
  margin-left: map.get($spacing, 2);
}

.space-x-3 > * + * {
  margin-left: map.get($spacing, 3);
}

.space-y-1 > * + * {
  margin-top: map.get($spacing, 1);
}

.space-y-2 > * + * {
  margin-top: map.get($spacing, 2);
}

.space-y-3 > * + * {
  margin-top: map.get($spacing, 3);
}

.space-y-4 > * + * {
  margin-top: map.get($spacing, 4);
}

.space-y-6 > * + * {
  margin-top: map.get($spacing, 6);
}

.gap-1 {
  gap: map.get($spacing, 1);
}

.gap-2 {
  gap: map.get($spacing, 2);
}

.gap-3 {
  gap: map.get($spacing, 3);
}

.gap-4 {
  gap: map.get($spacing, 4);
}

.w-full {
  width: 100%;
}

.w-auto {
  width: auto;
}

.h-full {
  height: 100%;
}

.h-screen {
  height: 100vh;
}

.min-h-screen {
  min-height: 100vh;
}

.p-1 {
  padding: map.get($spacing, 1);
}

.p-2 {
  padding: map.get($spacing, 2);
}

.p-3 {
  padding: map.get($spacing, 3);
}

.p-4 {
  padding: map.get($spacing, 4);
}

.p-5 {
  padding: map.get($spacing, 5);
}

.p-6 {
  padding: map.get($spacing, 6);
}

.px-1 {
  padding-left: map.get($spacing, 1);
  padding-right: map.get($spacing, 1);
}

.px-2 {
  padding-left: map.get($spacing, 2);
  padding-right: map.get($spacing, 2);
}

.px-3 {
  padding-left: map.get($spacing, 3);
  padding-right: map.get($spacing, 3);
}

.px-4 {
  padding-left: map.get($spacing, 4);
  padding-right: map.get($spacing, 4);
}

.px-5 {
  padding-left: map.get($spacing, 5);
  padding-right: map.get($spacing, 5);
}

.px-6 {
  padding-left: map.get($spacing, 6);
  padding-right: map.get($spacing, 6);
}

.py-1 {
  padding-top: map.get($spacing, 1);
  padding-bottom: map.get($spacing, 1);
}

.py-2 {
  padding-top: map.get($spacing, 2);
  padding-bottom: map.get($spacing, 2);
}

.py-3 {
  padding-top: map.get($spacing, 3);
  padding-bottom: map.get($spacing, 3);
}

.py-4 {
  padding-top: map.get($spacing, 4);
  padding-bottom: map.get($spacing, 4);
}

.m-0 {
  margin: 0;
}

.mb-0 {
  margin-bottom: 0;
}

.mb-4 {
  margin-bottom: map.get($spacing, 4);
}

.mb-6 {
  margin-bottom: map.get($spacing, 6);
}

.mt-1 {
  margin-top: map.get($spacing, 1);
}

.mt-2 {
  margin-top: map.get($spacing, 2);
}

.mt-3 {
  margin-top: map.get($spacing, 3);
}

.mt-4 {
  margin-top: map.get($spacing, 4);
}

.mt-6 {
  margin-top: map.get($spacing, 6);
}

.mt-auto {
  margin-top: auto;
}

.rounded {
  border-radius: map.get($border-radius, base);
}

.rounded-md {
  border-radius: map.get($border-radius, md);
}

.rounded-lg {
  border-radius: map.get($border-radius, lg);
}

.rounded-xl {
  border-radius: map.get($border-radius, xl);
}

.rounded-2xl {
  border-radius: map.get($border-radius, '2xl');
}

.rounded-full {
  border-radius: map.get($border-radius, full);
}

.border {
  border: 1px solid;
}

.border-0 {
  border: 0;
}

.shadow-sm {
  box-shadow: map.get($box-shadow, sm);
}

.shadow-md {
  box-shadow: map.get($box-shadow, md);
}

.shadow-lg {
  box-shadow: map.get($box-shadow, lg);
}

.shadow-xl {
  box-shadow: map.get($box-shadow, xl);
}

.shadow-2xl {
  box-shadow: map.get($box-shadow, '2xl');
}

.shadow-inner {
  box-shadow: map.get($box-shadow, inner);
}

.transition-all {
  transition: all map.get($transition, duration, normal) map.get($transition, timing, ease);
}

.transition-colors {
  transition: color map.get($transition, duration, normal) map.get($transition, timing, ease),
              background-color map.get($transition, duration, normal) map.get($transition, timing, ease),
              border-color map.get($transition, duration, normal) map.get($transition, timing, ease);
}

.duration-200 {
  transition-duration: map.get($transition, duration, normal);
}

.duration-300 {
  transition-duration: map.get($transition, duration, slow);
}

.hover\:bg-gray-50:hover {
  background-color: map.get($colors, gray, 50);
}

.hover\:bg-gray-100:hover {
  background-color: map.get($colors, gray, 100);
}

.hover\:scale-105:hover {
  transform: scale(1.05);
}

.transform {
  transform: translateZ(0);
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

.inset-0 {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.inset-y-0 {
  top: 0;
  bottom: 0;
}

.top-1\/2 {
  top: 50%;
}

.right-0 {
  right: 0;
}

.left-3 {
  left: map.get($spacing, 3);
}

.-translate-y-1\/2 {
  transform: translateY(-50%);
}

.z-50 {
  z-index: map.get($z-index, 50);
}

.pointer-events-none {
  pointer-events: none;
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.select-all {
  user-select: all;
}

.break-all {
  word-break: break-all;
}

.italic {
  font-style: italic;
}

.font-mono {
  font-family: map.get($font-family, mono);
}

.font-semibold {
  font-weight: map.get($font-weight, semibold);
}

.font-bold {
  font-weight: map.get($font-weight, bold);
}

.font-extrabold {
  font-weight: map.get($font-weight, extrabold);
}

.text-xs {
  font-size: map.get($font-size, xs);
}

.text-sm {
  font-size: map.get($font-size, sm);
}

.text-base {
  font-size: map.get($font-size, base);
}

.text-lg {
  font-size: map.get($font-size, lg);
}

.text-xl {
  font-size: map.get($font-size, xl);
}

.text-2xl {
  font-size: map.get($font-size, '2xl');
}

.text-3xl {
  font-size: map.get($font-size, '3xl');
}

.text-4xl {
  font-size: map.get($font-size, '4xl');
}

.leading-tight {
  line-height: map.get($line-height, tight);
}

.leading-normal {
  line-height: map.get($line-height, normal);
}

.tracking-tight {
  letter-spacing: -0.025em;
}

// Grid
.grid {
  display: grid;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

// Responsive utilities
@media (min-width: map.get($breakpoints, sm)) {
  .sm\:text-base {
    font-size: map.get($font-size, base);
  }
  
  .sm\:text-4xl {
    font-size: map.get($font-size, '4xl');
  }
  
  .sm\:p-6 {
    padding: map.get($spacing, 6);
  }
  
  .sm\:flex-row {
    flex-direction: row;
  }
  
  .sm\:items-center {
    align-items: center;
  }
  
  .sm\:w-auto {
    width: auto;
  }
  
  .sm\:mt-0 {
    margin-top: 0;
  }
  
  .sm\:flex-col {
    flex-direction: column;
  }
  
  .sm\:justify-between {
    justify-content: space-between;
  }
  
  .sm\:items-start {
    align-items: flex-start;
  }
}

@media (min-width: map.get($breakpoints, lg)) {
  .lg\:min-h-screen {
    min-height: 100vh;
  }
  
  .lg\:w-64 {
    width: 16rem;
  }
  
  .lg\:flex-row {
    flex-direction: row;
  }
  
  .lg\:p-8 {
    padding: map.get($spacing, 8);
  }
  
  .lg\:rounded-l-xl {
    border-top-left-radius: map.get($border-radius, xl);
    border-bottom-left-radius: map.get($border-radius, xl);
  }
  
  .lg\:rounded-r-xl {
    border-top-right-radius: map.get($border-radius, xl);
    border-bottom-right-radius: map.get($border-radius, xl);
  }
  
  .lg\:rounded-bl-none {
    border-bottom-left-radius: 0;
  }
  
  .lg\:rounded-tr-none {
    border-top-right-radius: 0;
  }
  
  .lg\:mb-0 {
    margin-bottom: 0;
  }
  
  .lg\:flex-col {
    flex-direction: column;
  }
}

// Animation
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-fadeInUp {
  animation: fadeInUp 0.3s ease-out;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

// Disabled states
.disabled\:opacity-50:disabled {
  opacity: 0.5;
}

.disabled\:cursor-not-allowed:disabled {
  cursor: not-allowed;
}

.text-primary {
  color: var(--color-primary);
}
.text-secondary {
  color: var(--color-secondary);
}
.text-accent {
  color: var(--color-accent);
}
.text-dark {
  color: var(--color-dark);
}
.text-white {
  color: var(--color-white);
}
.text-success {
  color: var(--color-success);
}
.text-info {
  color: var(--color-info);
}

.bg-primary {
  background-color: var(--color-primary);
}
.bg-secondary {
  background-color: var(--color-secondary);
}
.bg-accent {
  background-color: var(--color-accent);
}
.bg-dark {
  background-color: var(--color-dark);
}
.bg-white {
  background-color: var(--color-white);
}
.bg-background {
  background-color: var(--color-background);
}
.bg-success {
  background-color: var(--color-success);
}
.bg-info {
  background-color: var(--color-info);
}

.border-primary {
  border-color: var(--color-primary);
}
.border-secondary {
  border-color: var(--color-secondary);
}
.border-accent {
  border-color: var(--color-accent);
}
.border-dark {
  border-color: var(--color-dark);
}

.hover\:bg-primary:hover {
  background-color: var(--color-primary);
}
.hover\:bg-secondary:hover {
  background-color: var(--color-secondary);
}
.hover\:bg-accent:hover {
  background-color: var(--color-accent);
}
.hover\:text-primary:hover {
  color: var(--color-primary);
}
.hover\:text-secondary:hover {
  color: var(--color-secondary);
}
.hover\:text-accent:hover {
  color: var(--color-accent);
} 